name: CI

on:
  push:
    branches:
    - main
  pull_request:
    branches:
    - main
  workflow_dispatch:

jobs:
  build-ubuntu:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        compiler: [gcc]
        build_type: [Debug, Release]
      fail-fast: false

    steps:
      - uses: actions/checkout@v4

      - name: Cache APT packages
        uses: actions/cache@v4.2.4
        with:
          path: /var/cache/apt/archives
          key: apt-cache-ubuntu-${{ runner.os }}-${{ hashFiles('**/.github/workflows/*.yml') }}
          restore-keys: |
            apt-cache-ubuntu-${{ runner.os }}-

      - name: Install base dependencies
        run: |
          sudo apt update && sudo apt install -y \
            git \
            gcc \
            cmake \
            make \
            curl \
            ca-certificates \
            pkg-config \
            zlib1g \
            zlib1g-dev \
            libzstd-dev \
            liblz4-dev \
            bzip2 \
            libbz2-dev

      - name: Install PostgreSQL from official repository
        run: |
          # Add official PostgreSQL repository
          sudo install -d /usr/share/postgresql-common/pgdg
          sudo curl -o /usr/share/postgresql-common/pgdg/apt.postgresql.org.asc --fail https://www.postgresql.org/media/keys/ACCC4CF8.asc
          sudo sh -c 'echo "deb [signed-by=/usr/share/postgresql-common/pgdg/apt.postgresql.org.asc] https://apt.postgresql.org/pub/repos/apt $(lsb_release -cs)-pgdg main" > /etc/apt/sources.list.d/pgdg.list'
          sudo apt update
          
          # Install PostgreSQL with ALL development packages
          sudo apt install -y \
            postgresql-17 \
            postgresql-server-dev-17 \
            postgresql-client-17 \
            postgresql-contrib-17 \
            postgresql-common \
            postgresql-server-dev-all \
            libpq-dev \
            libpq5

      - name: Set PostgreSQL environment and verify installation
        run: |
          # Add PostgreSQL binaries to PATH
          echo "/usr/lib/postgresql/17/bin" >> $GITHUB_PATH
          
          # Verify installation
          echo "=== PostgreSQL Installation Verification ==="
          /usr/lib/postgresql/17/bin/pg_config --version
          echo "Include directory: $(/usr/lib/postgresql/17/bin/pg_config --includedir)"
          echo "Server include directory: $(/usr/lib/postgresql/17/bin/pg_config --includedir-server)"
          echo "Library directory: $(/usr/lib/postgresql/17/bin/pg_config --libdir)"
          echo "Package library directory: $(/usr/lib/postgresql/17/bin/pg_config --pkglibdir)"
          
          # Verify critical header files exist
          SERVER_INC=$(/usr/lib/postgresql/17/bin/pg_config --includedir-server)
          if [ -f "$SERVER_INC/fmgr.h" ]; then
            echo "✓ fmgr.h found at: $SERVER_INC/fmgr.h"
          else
            echo "✗ fmgr.h not found at expected location: $SERVER_INC/fmgr.h"
            exit 1
          fi

      - name: Build Project
        run: |
          mkdir -p build
          cd build
          
          if [ "${{ matrix.compiler }}" = "gcc" ]; then
            export CC=/usr/bin/gcc
          else
            export CC=/usr/bin/clang
          fi
          
          # Configure with CMAKE
          cmake -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} ..
          
          # Build with verbose output
          make VERBOSE=1

      - name: Install Extension
        run: |
          cd build
          sudo make install
          
          # Verify installation
          PGLIB_DIR=$(/usr/lib/postgresql/17/bin/pg_config --pkglibdir)
          if [ -f "$PGLIB_DIR/pgexporter_ext.so" ]; then
            echo "✓ Extension installed successfully at $PGLIB_DIR/pgexporter_ext.so"
            ls -la "$PGLIB_DIR"/pgexporter_ext*
            
            # Debug: Check what functions are exported in the shared library
            echo "=== Exported functions in the shared library ==="
            nm -D "$PGLIB_DIR/pgexporter_ext.so" | grep -E "(pgexporter|T )" | head -20
            echo "=== All exported symbols ==="
            objdump -T "$PGLIB_DIR/pgexporter_ext.so" | grep -v "UND" | head -20
          else
            echo "✗ Extension installation failed"
            echo "Contents of PostgreSQL lib directory:"
            ls -la "$PGLIB_DIR/" || echo "Directory not found"
          fi

      - name: Start PostgreSQL 17 and test extension
        run: |
          # Stop any existing PostgreSQL service
          sudo systemctl stop postgresql || true
          
          # Check which PostgreSQL versions are installed
          echo "=== Available PostgreSQL versions ==="
          ls /usr/lib/postgresql/ || echo "No PostgreSQL versions found"
          
          # Initialize PostgreSQL 17 data directory
          sudo -u postgres /usr/lib/postgresql/17/bin/initdb -D /var/lib/postgresql/17/main --auth-local=peer --auth-host=md5
          
          # Start PostgreSQL 17 specifically
          sudo -u postgres /usr/lib/postgresql/17/bin/pg_ctl -D /var/lib/postgresql/17/main -l /var/lib/postgresql/17/main/postgresql.log start
          
          # Wait for PostgreSQL to start
          sleep 5
          
          # Create test database using PostgreSQL 17 binaries
          sudo -u postgres /usr/lib/postgresql/17/bin/createdb testdb
          
          # Test extension installation using PostgreSQL 17 binaries
          sudo -u postgres /usr/lib/postgresql/17/bin/psql -d testdb -c "CREATE EXTENSION pgexporter_ext;" || {
            echo "Extension creation failed, checking logs..."
            echo "=== PostgreSQL 17 log ==="
            sudo cat /var/lib/postgresql/17/main/postgresql.log || echo "Log file not found"
            echo "=== Extension files ==="
            ls -la /usr/share/postgresql/17/extension/pgexporter_ext*
            echo "=== Library files ==="
            ls -la /usr/lib/postgresql/17/lib/pgexporter_ext*
            exit 1
          }
          
          sudo -u postgres /usr/lib/postgresql/17/bin/psql -d testdb -c "SELECT extname, extversion FROM pg_extension WHERE extname = 'pgexporter_ext';"
          echo "✓ Extension loaded and tested successfully with PostgreSQL 17"

      - name: PostgreSQL collect logs
        if: always()
        run: |
          sudo chmod 644 /var/lib/postgresql/17/main/postgresql.log || true
          sudo chmod 644 /var/lib/postgresql/17/main/pg_hba.conf || true
          sudo chmod 644 /var/lib/postgresql/17/main/postgresql.conf || true
          
          # Show log content for immediate debugging
          echo "=== PostgreSQL 17 Full Log ==="
          sudo cat /var/lib/postgresql/17/main/postgresql.log || echo "Log file not found"

      - name: Upload PostgreSQL Logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: postgresql-logs-${{ matrix.compiler }}-${{ matrix.build_type }}
          path: |
            /var/lib/postgresql/17/main/postgresql.log
            /var/lib/postgresql/17/main/pg_hba.conf
            /var/lib/postgresql/17/main/postgresql.conf
          retention-days: 7